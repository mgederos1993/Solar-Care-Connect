import { Image, ScrollView, StyleSheet, Text, TouchableOpacity, View, Platform } from 'react-native';
import { useRouter } from 'expo-router';
import { ArrowRight, Calendar, CheckCircle, Infinity } from 'lucide-react-native';
import * as WebBrowser from 'expo-web-browser';
import { useEffect } from 'react';

import Colors from '@/constants/colors';
import { subscriptionPlans } from '@/constants/subscriptionPlans';
import { useSubscriptionStore } from '@/store/subscriptionStore';
import { useUserStore } from '@/store/userStore';

export default function HomeScreen() {
  const router = useRouter();
  const { selectedPlan, isSubscribed } = useSubscriptionStore();
  const { user } = useUserStore();

  // Create a default user if none exists
  useEffect(() => {
    if (!user) {
      // This is a fresh user, no need to create a profile
      console.log('Fresh user - showing subscription plans');
    }
  }, [user]);

  const handleSubscriptionPress = () => {
    try {
      router.push('/appointments');
    } catch (error) {
      console.error('Navigation error:', error);
    }
  };

  const handlePlanSelect = async (planId: string) => {
    try {
      const plan = subscriptionPlans.find(p => p.id === planId);
      if (!plan) return;

      // Open JotForm with plan information
      const jotformUrl = `https://form.jotform.com/251608739182059?plan=${encodeURIComponent(plan.name)}&price=${plan.price}&interval=${plan.interval}&appointments=${plan.appointmentsPerMonth}`;
      
      if (Platform.OS === 'web') {
        // On web, open in new tab
        window.open(jotformUrl, '_blank');
      } else {
        // On mobile, use WebBrowser
        await WebBrowser.openBrowserAsync(jotformUrl);
      }
    } catch (error) {
      console.error('Failed to open JotForm:', error);
    }
  };

  return (
    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>
      <View style={styles.logoSection}>
        <Image 
          source={{ uri: 'https://images.unsplash.com/photo-1509391366360-2e959784a276?ixlib=rb-4.0.3&auto=format&fit=crop&w=200&q=80' }}
          style={styles.logo}
          resizeMode="contain"
        />
        <Text style={styles.logoText}>Solar Care Connect</Text>
      </View>
      
      <View style={styles.welcomeSection}>
        <Text style={styles.welcomeTitle}>AI-Powered Solar Appointments</Text>
        <Text style={styles.welcomeSubtitle}>
          Get qualified solar leads and appointments automatically generated by our AI system
        </Text>
      </View>
      
      {isSubscribed && selectedPlan ? (
        <View style={styles.currentPlanSection}>
          <Text style={styles.sectionTitle}>Your Current Plan</Text>
          <View style={[styles.currentPlanCard, { borderColor: selectedPlan.color }]}>
            <View style={styles.currentPlanHeader}>
              <Text style={styles.currentPlanName}>{selectedPlan.name}</Text>
              <Text style={[styles.currentPlanBadge, { backgroundColor: selectedPlan.color }]}>Active</Text>
            </View>
            
            <View style={styles.currentPlanDetails}>
              <Text style={styles.currentPlanPrice}>${selectedPlan.price.toLocaleString()}/{selectedPlan.interval}</Text>
              <View style={styles.appointmentsRow}>
                {selectedPlan.appointmentsPerMonth === 999 ? (
                  <>
                    <Infinity size={16} color={selectedPlan.color} />
                    <Text style={styles.currentPlanAppointments}>Unlimited appointments</Text>
                  </>
                ) : (
                  <Text style={styles.currentPlanAppointments}>
                    {selectedPlan.appointmentsPerMonth} appointments per month
                  </Text>
                )}
              </View>
            </View>
            
            <TouchableOpacity 
              style={styles.viewAppointmentsButton}
              onPress={handleSubscriptionPress}
            >
              <Text style={styles.viewAppointmentsText}>View Your Appointments</Text>
              <ArrowRight size={16} color={Colors.light.primary} />
            </TouchableOpacity>
          </View>
        </View>
      ) : (
        <View style={styles.subscriptionSection}>
          <Text style={styles.sectionTitle}>Choose a Subscription Plan</Text>
          <Text style={styles.sectionSubtitle}>
            Select a plan that fits your business needs. All no-show appointments are replaced for free.
          </Text>
          
          <View style={styles.plansContainer}>
            {subscriptionPlans.slice(0, 2).map((plan) => (
              <TouchableOpacity
                key={plan.id}
                style={styles.planCard}
                onPress={() => handlePlanSelect(plan.id)}
              >
                <View style={styles.planHeader}>
                  <Text style={styles.planName}>{plan.name}</Text>
                  {plan.popular && (
                    <Text style={[styles.popularBadge, { backgroundColor: plan.color }]}>
                      Popular
                    </Text>
                  )}
                </View>
                
                <Text style={styles.planPrice}>
                  <Text style={styles.planPriceAmount}>${plan.price.toLocaleString()}</Text>
                  /{plan.interval}
                </Text>
                
                <View style={styles.planFeatures}>
                  <View style={styles.planFeature}>
                    {plan.appointmentsPerMonth === 999 ? (
                      <Infinity size={16} color={plan.color} />
                    ) : (
                      <Calendar size={16} color={plan.color} />
                    )}
                    <Text style={styles.planFeatureText}>
                      {plan.appointmentsPerMonth === 999 
                        ? 'Unlimited appointments' 
                        : `${plan.appointmentsPerMonth} appointments/month`}
                    </Text>
                  </View>
                  
                  <View style={styles.planFeature}>
                    <CheckCircle size={16} color={plan.color} />
                    <Text style={styles.planFeatureText}>No-show replacements</Text>
                  </View>
                  
                  <View style={styles.planFeature}>
                    <CheckCircle size={16} color={plan.color} />
                    <Text style={styles.planFeatureText}>AI-generated leads</Text>
                  </View>
                </View>
                
                <Text style={[styles.selectPlanButton, { color: plan.color }]}>
                  Select Plan
                </Text>
              </TouchableOpacity>
            ))}
          </View>
          
          <TouchableOpacity 
            style={styles.viewAllPlansButton}
            onPress={() => router.push('/appointments')}
          >
            <Text style={styles.viewAllPlansText}>View All Plan Details</Text>
            <ArrowRight size={16} color={Colors.light.primary} />
          </TouchableOpacity>
        </View>
      )}
      
      <View style={styles.howItWorksSection}>
        <Text style={styles.sectionTitle}>How It Works</Text>
        
        <View style={styles.stepsContainer}>
          <View style={styles.step}>
            <View style={[styles.stepNumber, { backgroundColor: Colors.light.primary }]}>
              <Text style={styles.stepNumberText}>1</Text>
            </View>
            <Text style={styles.stepTitle}>Choose a Plan</Text>
            <Text style={styles.stepDescription}>
              Select a subscription plan that fits your solar business needs
            </Text>
          </View>
          
          <View style={styles.step}>
            <View style={[styles.stepNumber, { backgroundColor: Colors.light.primary }]}>
              <Text style={styles.stepNumberText}>2</Text>
            </View>
            <Text style={styles.stepTitle}>AI Makes Calls</Text>
            <Text style={styles.stepDescription}>
              Our AI system calls potential solar customers in your target area
            </Text>
          </View>
          
          <View style={styles.step}>
            <View style={[styles.stepNumber, { backgroundColor: Colors.light.primary }]}>
              <Text style={styles.stepNumberText}>3</Text>
            </View>
            <Text style={styles.stepTitle}>Get Appointments</Text>
            <Text style={styles.stepDescription}>
              Qualified solar appointments are automatically added to your calendar
            </Text>
          </View>
        </View>
      </View>
      
      <View style={styles.supportSection}>
        <Text style={styles.supportTitle}>Need Help?</Text>
        <Text style={styles.supportText}>
          Contact our support team at{' '}
          <Text style={styles.supportEmail}>solarcareconnect@gmail.com</Text>
        </Text>
      </View>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: Colors.light.background,
  },
  contentContainer: {
    paddingBottom: 40,
  },
  logoSection: {
    alignItems: 'center',
    paddingVertical: 20,
    backgroundColor: Colors.light.card,
    borderBottomWidth: 1,
    borderBottomColor: Colors.light.border,
  },
  logo: {
    width: 60,
    height: 60,
    marginBottom: 8,
  },
  logoText: {
    fontSize: 20,
    fontWeight: '700',
    color: Colors.light.text,
  },
  welcomeSection: {
    padding: 20,
    paddingTop: 24,
    paddingBottom: 16,
  },
  welcomeTitle: {
    fontSize: 24,
    fontWeight: '700',
    color: Colors.light.text,
    marginBottom: 8,
  },
  welcomeSubtitle: {
    fontSize: 16,
    color: Colors.light.subtext,
    lineHeight: 22,
  },
  currentPlanSection: {
    padding: 20,
    paddingTop: 0,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: Colors.light.text,
    marginBottom: 16,
  },
  currentPlanCard: {
    backgroundColor: Colors.light.card,
    borderRadius: 12,
    padding: 16,
    borderWidth: 2,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 8,
    elevation: 2,
  },
  currentPlanHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 12,
  },
  currentPlanName: {
    fontSize: 18,
    fontWeight: '600',
    color: Colors.light.text,
  },
  currentPlanBadge: {
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 12,
    color: 'white',
    fontSize: 12,
    fontWeight: '500',
  },
  currentPlanDetails: {
    marginBottom: 16,
  },
  currentPlanPrice: {
    fontSize: 20,
    fontWeight: '700',
    color: Colors.light.text,
    marginBottom: 4,
  },
  appointmentsRow: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 6,
  },
  currentPlanAppointments: {
    fontSize: 14,
    color: Colors.light.subtext,
  },
  viewAppointmentsButton: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    paddingVertical: 12,
    backgroundColor: '#F3F4F6',
    borderRadius: 8,
    gap: 8,
  },
  viewAppointmentsText: {
    fontSize: 14,
    fontWeight: '500',
    color: Colors.light.primary,
  },
  subscriptionSection: {
    padding: 20,
    paddingTop: 0,
  },
  sectionSubtitle: {
    fontSize: 14,
    color: Colors.light.subtext,
    marginBottom: 16,
    marginTop: -8,
  },
  plansContainer: {
    flexDirection: 'row',
    gap: 12,
  },
  planCard: {
    flex: 1,
    backgroundColor: Colors.light.card,
    borderRadius: 12,
    padding: 12,
    borderWidth: 1,
    borderColor: Colors.light.border,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.05,
    shadowRadius: 5,
    elevation: 1,
  },
  planHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 8,
  },
  planName: {
    fontSize: 16,
    fontWeight: '600',
    color: Colors.light.text,
  },
  popularBadge: {
    paddingHorizontal: 6,
    paddingVertical: 2,
    borderRadius: 10,
    color: 'white',
    fontSize: 10,
    fontWeight: '500',
  },
  planPrice: {
    fontSize: 14,
    color: Colors.light.subtext,
    marginBottom: 12,
  },
  planPriceAmount: {
    fontSize: 18,
    fontWeight: '700',
    color: Colors.light.text,
  },
  planFeatures: {
    gap: 8,
    marginBottom: 12,
  },
  planFeature: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 6,
  },
  planFeatureText: {
    fontSize: 12,
    color: Colors.light.text,
    flex: 1,
  },
  selectPlanButton: {
    textAlign: 'center',
    fontWeight: '600',
    fontSize: 14,
    marginTop: 4,
  },
  viewAllPlansButton: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    marginTop: 16,
    gap: 8,
  },
  viewAllPlansText: {
    fontSize: 14,
    fontWeight: '500',
    color: Colors.light.primary,
  },
  howItWorksSection: {
    padding: 20,
    backgroundColor: Colors.light.card,
    marginTop: 16,
  },
  stepsContainer: {
    gap: 24,
  },
  step: {
    alignItems: 'center',
  },
  stepNumber: {
    width: 40,
    height: 40,
    borderRadius: 20,
    alignItems: 'center',
    justifyContent: 'center',
    marginBottom: 12,
  },
  stepNumberText: {
    color: 'white',
    fontSize: 18,
    fontWeight: '600',
  },
  stepTitle: {
    fontSize: 16,
    fontWeight: '600',
    color: Colors.light.text,
    marginBottom: 4,
  },
  stepDescription: {
    fontSize: 14,
    color: Colors.light.subtext,
    textAlign: 'center',
    maxWidth: 280,
  },
  supportSection: {
    padding: 20,
    backgroundColor: '#F0F9FF',
    marginTop: 16,
    marginHorizontal: 20,
    borderRadius: 12,
    borderWidth: 1,
    borderColor: '#BAE6FD',
  },
  supportTitle: {
    fontSize: 16,
    fontWeight: '600',
    color: Colors.light.text,
    marginBottom: 8,
  },
  supportText: {
    fontSize: 14,
    color: Colors.light.text,
    lineHeight: 20,
  },
  supportEmail: {
    color: Colors.light.primary,
    fontWeight: '600',
  },
});